services:
  db:
    container_name: database
    env_file: .env
    build:
      context: ./database
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"

  rabbit:
    container_name: rabbit
    image: 'rabbitmq:4.1-management'
    env_file: .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"

  backdev:
    container_name: backend
    env_file: .env
    build:
      context: ./spring_app
      target: builder
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - ./spring_app:/app
    command: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    working_dir: /app
    depends_on:
      - db
      - rabbit

  frontdev:
    container_name: frontend
    build:
      context: ./react_app
      target: builder
    ports:
      - "5173:5173"
    volumes:
      - ./react_app:/app
      - /app/node_modules
    command: bun run dev --host
    environment:
      - VITE_HOST=0.0.0.0

  #   frontend:
  #     build:
  #       context: ./react_app
  #       dockerfile: Dockerfile
  #     ports:
  #       - "8080:80"
  #     volumes:
  #       - ./react_app:/app
  #       - /app/node_modules
